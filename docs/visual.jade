extends _docs.tpl.jade

block append vars
  - var page = ConfDocs.DOCS.find('visual.html')

block append styles
  style.
    #derivation-color-palettes li.docs-o-ColorList__Item { margin-right: 3rem; }

block append main
  section#derivation-color-palettes
    h2 Derivation of Color Palettes
    mixin block($color)
      svg.docs-c-ColorBox(viewbox=`0 0 96 ${(96 * (Math.sqrt(5)-1)/2)}`)
        rect(style={fill: $color.toString('hex')} width="96" height=(96 * (Math.sqrt(5)-1)/2))
      p: code= $color.toString('hsl')
    mixin list(color1, color2)
      ul.o-List.docs-o-ColorList
        li.o-List__Item.docs-o-ColorList__Item: +block(color1)
        li.o-List__Item.docs-o-ColorList__Item: +block(color2)
    -
      var primary   = Color.fromString('#00737b')
      var secondary = Color.fromString('#694890')
    ol
      li Start with two colors.
        -
          var a1 = primary
          var a2 = secondary
        +list(a1, a2)
      li Normalize the lightness of each of them.
        -
          var b1 = a1.brighten(0.5 - a1.hslLum())
          var b2 = a2.brighten(0.5 - a2.hslLum())
        +list(b1, b2)
      li Mix in 25% of the other color.
        -
          var c1 = b1.mix(b2, 1/4)
          var c2 = b2.mix(b1, 1/4)
        +list(c1, c2)
      li Desaturate each by 87.5%.
        -
          var d1 = c1.desaturate(7/8, true)
          var d2 = c2.desaturate(7/8, true)
        +list(d1, d2)
      li Darken (primary) / lighten (secondary) by 50%.
        -
          var e1 = d1.darken  (1/2, true)
          var e2 = d2.brighten(1/2, true)
        +list(e1, e2)
      li
        | For each of these four main colors (primary, secondary, dark gray, light gray), the following
        |  operations will yield the shades and tints:
        ul
          li Shade 1 (s1): darken by 25%
          li Shade 2 (s2): darken by 50%
          li Tint 1 (t1): lighten by 25%
          li Tint 2 (t2): lighten by 50%
  mixin colorItem(arg)
    li.o-List__Item.docs-o-ColorList__Item
      figure
        -
          var _width  = arg.side
          var _height = arg.side * (Math.sqrt(5)-1)/2
        svg.docs-c-ColorBox(viewbox=`0 0 ${_width} ${_height}` data-prop=arg.data_prop)
          rect(class=arg.classname width=_width height=_height)
        p
          b= arg.name
          br
          code= arg.code
  mixin siteColorList(primary_str, secondary_str)
    -
      var site_colors = ConfSite.colorStyles(Color.fromString(primary_str), Color.fromString(secondary_str))
    ul.o-List.docs-o-ColorList(style=site_colors)
      each $item in ConfDocs.COLOR_NAMES
        +colorItem({
          side: 96
        , classname: '-f' + $item.suffix
        , data_prop: '--color' + $item.suffix
        , name: $item.name
        , code: Color.fromString(site_colors['--color' + $item.suffix]).toString('hex')
        })
  section#asce
    h2 ASCE
    h3 Colors
    -
      var core_colors = [
        { name: 'ASCE Black', color_hex: '#222222', classname: '-f-asce_black' }
      , { name: 'ASCE White', color_hex: '#ffffff', classname: '-f-asce_white' }
      , { name: 'ASCE Blue' , color_hex: '#0c5fa8', classname: '-f-asce_blue'  }
      ]
    ul.o-List.docs-o-ColorList
      each $item in core_colors
        +colorItem({
          side: 96
        , classname: $item.classname
        , name: $item.name
        , code: $item.color_hex
        })
  section#docs
    h2 Docs
    p (this style guide)
    h3 Colors
    p Use the color pickers to experiment with different combinations!
      small  (Javascript must be enabled.)
    ol.o-List.o-Flex
      li.o-Flex__Item Primary   color: #[input.js-picker.js-picker-primary(type="color" style="width:3rem;" value="#660000")]
      li.o-Flex__Item Secondary color: #[input.js-picker.js-picker-secondary(type="color" style="width:3rem;" value="#ff6600")]
    +siteColorList('#660000', '#ff6600')
  section#asce2016
    h2 ASCE 2016
    h3 Colors
    +siteColorList('#3fae2a', '#00a1e1')
  section#asce2017
    h2 ASCE 2017
    h3 Colors
    +siteColorList('#00737b', '#694890')

block append scripts
  script(src="/scripts/imports.js")
  script.
    $('#docs input.js-picker').change(function () {
      var primary = Color.fromString($('#docs input.js-picker-primary').val())
      var secondary = Color.fromString($('#docs input.js-picker-secondary').val())
      var styleobj = colorStyles(primary, secondary)
      for (var prop in styleobj) {
        document.querySelector('#docs .docs-o-ColorList').style.setProperty(prop, styleobj[prop])
      }
      $('#docs code').each(function () {
        $(this).text(Color.fromString(styleobj[
          $(this).parents('figure').find('svg').attr('data-prop')
        ]).toString('hex'))
      })
    })
