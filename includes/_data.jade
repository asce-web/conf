
//- ///////////////////////////////////////////////////////////////////////////////
//- //
//- // This file holds 'global' data for all files in this project,
//- // including the pattern library and the sample sites.
//- //
//- ///////////////////////////////////////////////////////////////////////////////



include class/_Util.class.jade
include class/_Site.class.jade
include class/_Page.class.jade
include class/_Conference.class.jade
include class/_SupporterLevel.class.jade
include class/_Supporter.class.jade
include class/_Person.class.jade
include class/_RegistrationPeriod.class.jade
include class/_Pass.class.jade
include class/_ProgramEvent.class.jade
include class/_ImportantDate.class.jade

mixin linkWithIcon(link, icon)
  //- NOTE parameter validation
  -
    link = link || {}
    icon = icon || {}
  a(class=link.classes href=link.url)&attributes(link.attr || {})
    if icon.is_on
      i.material-icons= icon.text
    span= link.text

mixin sitetoc(args)
  //- NOTE parameter validation
  -
    var pages     = args.pages     || []
    var class_obj = args.class_obj || {}
    var depth     = +args.depth    || 0
    var icons     = !!args.icons
  ul(class=class_obj.listclasses)
    each item in pages
      unless item.isHidden()
        li(class=class_obj.itemclasses)
          +linkWithIcon({
            classes : class_obj.linkclasses
          , url     : item.url
          , text    : item.name
          }, {
            is_on : args.icons && item.getIcon()
          , text  : item.getIcon()
          })
          if item.getSubpagesAll().length && depth > 0
            +sitetoc({pages: item.getSubpagesAll(), class_obj: (class_obj.sub || {}), depth: depth-1})

mixin event-location-name(loc)
  span(itemprop="name")
    span(itemprop="addressLocality")= loc.addressLocality + ', '
    abbr(title=loc.addressRegion_title itemprop="addressRegion")
      = loc.addressRegion

mixin heroContent(event0)
  h1.c-PageTitle.c-Hero__Name(itemprop="name")= event0.name
  meta(content=event0.url itemprop="url")
  p.c-Hero__Detail
    span.c-Hero__Place(itemprop="location" itemscope="" itemtype="http://schema.org/PostalAddress")
      +event-location-name(event0.location)
    span.c-Hero__Dates
      time(datetime=event0.startDate itemprop="startDate")
        - var start = (event0.startDate) ? new Date(event0.startDate) : new Date()
        = Util.monthDay(start)
      | &ndash;
      time(datetime=event0.endDate itemprop="endDate")
        - var end = (event0.endDate) ? new Date(event0.endDate) : new Date()
        = Util.monthDay(end)
  p.c-Hero__Theme(itemprop="description")
    if event0.theme
      = event0.theme
    else
      | &nbsp;

mixin highlightButtons(links, more_classes)
  ul.o-List.o-ListAction
    each item in links
      li.o-List__Item.o-ListAction__Item
        a.c-Btn.c-Btn--hilite(class=' '+(more_classes || '') href=item.href)&attributes(item.attr || {})
          = item.text

mixin highlight(classes)
  aside.o-Runner.o-Runner--highlight(class=classes)
    div.o-ContentWrapper
      block

mixin passList(passes, current_conference)
  ul.o-List.o-ListStacked
    include /includes/components/_c-Pass.jade
    each pass0 in passes
      li.o-List__Item.o-ListStacked__Item
        +pass(pass0, current_conference)

mixin speakerList(n)
  ul.o-List.o-ListStacked
    include /includes/components/_c-Speaker.jade
    each speaker0 in new Array(n)
      li.o-List__Item.o-ListStacked__Item
        +speaker()

mixin chairList(chairs)
  ul
    each person in chairs
      li(itemprop="organizer" itemscope="" itemtype="http://schema.org/Person")
        +personEntireName(person)

mixin sponsorLink(sponsor0, classes)
  a(class=classes href=sponsor0.getURL() style='background-image: url(\'' + sponsor0.getImg() || '' + '\');' itemprop="url")
    span(itemprop="name")= sponsor0.name

mixin personEntireName(person)
  if person.name.honorificPrefix
    span(itemprop="honorificPrefix")= person.name.honorificPrefix
    = ' '
  span(itemprop="name")
    span(itemprop="givenName")= person.name.givenName
    = ' '
    span(itemprop="additionalName")= person.name.additionalName
    = ' '
    span(itemprop="familyName")= person.name.familyName
  if person.name.honorificSuffix
    = ', '
    span(itemprop="honorificSuffix")= person.name.honorificSuffix
