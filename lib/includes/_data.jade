
//- ///////////////////////////////////////////////////////////////////////////////
//- //
//- // This file holds 'local' data for the styleguide pattern library.
//- //
//- ///////////////////////////////////////////////////////////////////////////////


-
  var Lib = (function () {
    function Lib() {}
    Lib.PAGES = [
      {
        name: 'Pattern Library', url: 'index.html'
      , description: ''
      }
    , {
        name: 'Visual Design', url: 'visual.html'
      , description: 'Color and font schemes, look-and-feel, overall mood and tone.'
      , sub: [
          { name: 'ASCE'     , url: 'visual.html#asce' }
        , { name: 'ASCE 2016', url: 'visual.html#asce2016' }
        ]
      }
    , {
        name: 'Base Typography', url: 'base.html'
      , description: 'Bare, unstyled HTML elements. No classes.'
      , sub: [
          { name: 'Table of Contents'    , url: 'base.html#table-contents' }
        , { name: 'Headings & Paragraphs', url: 'base.html#headings-paragraphs' }
        , { name: 'Lists'                , url: 'base.html#lists' }
        , { name: 'Tables'               , url: 'base.html#tables' }
        , {
            name: 'Text-Level Elements', url: '#text-level-elements'
          , sub: [
              { name: 'Links'        , url: 'base.html#links' }
            , { name: 'Stress'       , url: 'base.html#stress' }
            , { name: 'Documentation', url: 'base.html#documentation' }
            , { name: 'Data'         , url: 'base.html#data' }
            ]
          }
        , { name: 'Embedded Elements'    , url: 'base.html#embedded-elements' }
        , { name: 'Forms'                , url: 'base.html#forms' }
        , { name: 'Interactive Elements' , url: 'base.html#interactive-elements' }
        ]
      }
    , {
        name: 'Objects', url: 'obj.html'
      , description: 'Patterns of structure that can be reused many times for many different purposes.'
      , sub: [
          { name: 'Table of Contents'  , url: 'obj.html#table-contents' }
        , { name: 'The Block Object'   , url: 'obj.html#block-object' }
        , { name: 'The Inline Object'  , url: 'obj.html#inline-object' }
        , { name: 'The Bare List'      , url: 'obj.html#bare-list' }
        , { name: 'The Flex Grid'      , url: 'obj.html#flex-grid' }
        , { name: 'The Float Grid'     , url: 'obj.html#float-grid' }
        , { name: 'The Runner Object'  , url: 'obj.html#runner-object' }
        , { name: 'The Content Wrapper', url: 'obj.html#content-wrapper' }
        , { name: 'The Action List'    , url: 'obj.html#action-list' }
        , { name: 'The Stacked List'   , url: 'obj.html#stacked-list' }
        , { name: 'The Site Head'      , url: 'obj.html#site-head' }
        ]
      }
    , {
        name: 'Components', url: 'comp.html'
      , description: 'Patterns of look-and-feel that are each only used for one purpose.'
      , sub: [
          { name: 'Table of Contents'        , url: 'comp.html#table-contents' }
        , { name: 'The Masthead and Mastfoot', url: 'comp.html#masthead-mastfoot' }
        , { name: 'The Site Title'           , url: 'comp.html#site-title' }
        , { name: 'The Universal Menu'       , url: 'comp.html#universal-menu' }
        , { name: 'The Standard Menu'        , url: 'comp.html#standard-menu' }
        , { name: 'The Sub Menu'             , url: 'comp.html#sub-menu' }
        , { name: 'The Sitemap Component'    , url: 'comp.html#sitemap-component' }
        , { name: 'The Page Title'           , url: 'comp.html#page-title' }
        , { name: 'The Banner Component'     , url: 'comp.html#banner-component' }
        , { name: 'The Hero Block'           , url: 'comp.html#hero-block' }
        , { name: 'The Other Year Block'     , url: 'comp.html#other-year-block' }
        , { name: 'The Overlay Component'    , url: 'comp.html#overlay-component' }
        , { name: 'The Sponsor Block'        , url: 'comp.html#sponsor-block' }
        , { name: 'The Date Block'           , url: 'comp.html#date-block' }
        , { name: 'The Pass Component'       , url: 'comp.html#pass-component' }
        , { name: 'The Program Component'    , url: 'comp.html#program-component' }
        , { name: 'The Time Block'           , url: 'comp.html#time-block' }
        , { name: 'The Speaker Component'    , url: 'comp.html#speaker-component' }
        , { name: 'The Social List'          , url: 'comp.html#social-list' }
        , { name: 'The Callout Component'    , url: 'comp.html#callout-component' }
        , { name: 'Buttons'                  , url: 'comp.html#buttons' }
        , { name: 'Text-Level Components'    , url: 'comp.html#text-level-components'}
        ]
      }
    , {
        name: 'Helpers', url: 'help.html'
      , description: 'Somewhat explicit classes used for enhancing default styles.'
      }
    , {
        name: 'Atoms', url: 'atom.html'
      , description: 'Very specific classes used for creating anomalies or fixing broken styles.'
      }
    ]
    Lib.getPage = function getPage(url0) {
      return Lib.PAGES.find(function (item) { return item.url === url0 })
    }
    return Lib
  })()

mixin libtoc(args)
  - var pages     = args.pages     || []
  - var class_obj = args.class_obj || {}
  - var depth     = +args.depth    || 0
  ol(class=class_obj.listclasses)
    each item in pages
      li(class=class_obj.itemclasses)
        a(class=class_obj.linkclasses href=item.url)= item.name
        if item.sub && depth > 0
          +libtoc({pages: item.sub, class_obj: (class_obj.sub || {}), depth: depth-1})
