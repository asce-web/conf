
//- ///////////////////////////////////////////////////////////////////////////////
//- //
//- // This file holds 'local' data for the styleguide pattern library.
//- //
//- ///////////////////////////////////////////////////////////////////////////////


include /_classes/Styleguide.class.jade
-
  //- var Styleguide = require('../../_classes/Styleguide.class.js')
  var confdocs = new Styleguide('ASCE Conferences Style Guide', '/lib/')
    .setTitle('ASCE Conferences Style Guide')
    .init()
  confdocs.getPage('visual.html')
    .hide(false)
    .addPage(new Page({ name: 'ASCE'     , url: '#asce' }))
    .addPage(new Page({ name: 'ASCE 2016', url: '#asce2016' }))
  confdocs.getPage('obj.html')
    .addPage(new Page({ name: 'The Float Grid'     , url: '#float-grid' }))
    .addPage(new Page({ name: 'The Runner Object'  , url: '#runner-object' }))
    .addPage(new Page({ name: 'Constrain'          , url: '#constrain' }))
    .addPage(new Page({ name: 'The Action List'    , url: '#action-list' }))
    .addPage(new Page({ name: 'The Stacked List'   , url: '#stacked-list' }))
    .addPage(new Page({ name: 'The Drawer Object'  , url: '#drawer-object' }))
  confdocs.getPage('comp.html')
    .hide(false)
    .addPage(new Page({ name: 'The Masthead and Mastfoot', url: '#masthead-mastfoot' }))
    .addPage(new Page({ name: 'The Site Title'           , url: '#site-title' }))
    .addPage(new Page({ name: 'The Top Menu'             , url: '#top-menu' }))
    .addPage(new Page({ name: 'The Main Menu'            , url: '#main-menu' }))
    .addPage(new Page({ name: 'The Sub Menu'             , url: '#sub-menu' }))
    .addPage(new Page({ name: 'The Sitemap Component'    , url: '#sitemap-component' }))
    .addPage(new Page({ name: 'The Page Title'           , url: '#page-title' }))
    .addPage(new Page({ name: 'The Banner Component'     , url: '#banner-component' }))
    .addPage(new Page({ name: 'The Hero Block'           , url: '#hero-block' }))
    .addPage(new Page({ name: 'The Other Year Block'     , url: '#other-year-block' }))
    .addPage(new Page({ name: 'The Overlay Component'    , url: '#overlay-component' }))
    .addPage(new Page({ name: 'The Sponsor Logo'         , url: '#sponsor-logo' }))
    .addPage(new Page({ name: 'The Sponsor Block'        , url: '#sponsor-block' }))
    .addPage(new Page({ name: 'The Date Block'           , url: '#date-block' }))
    .addPage(new Page({ name: 'The Pass Component'       , url: '#pass-component' }))
    .addPage(new Page({ name: 'The Program Component'    , url: '#program-component' }))
    .addPage(new Page({ name: 'The Time Block'           , url: '#time-block' }))
    .addPage(new Page({ name: 'The Speaker Component'    , url: '#speaker-component' }))
    .addPage(new Page({ name: 'The Social List'          , url: '#social-list' }))
    .addPage(new Page({ name: 'The Callout Component'    , url: '#callout-component' }))
    .addPage(new Page({ name: 'Buttons'                  , url: '#buttons' }))
    .addPage(new Page({ name: 'The Toggle Button'        , url: '#toggle-button' }))
    .addPage(new Page({ name: 'The Camo Link'            , url: '#camo-link'}))

  var DOCS_CLASSES = {
    figure : 'docs-figure'
  , pre    : 'docs-pre'
  , code   : 'docs-code'
  }

mixin libtoc(args)
  //- NOTE parameter validation
  -
    var pages   = args.pages   || []
    var classes = args.classes || {}
    var depth   = +args.depth  || 0
  ol(class=classes.listclasses)
    each item in pages
      li(class=classes.itemclasses)
        a(class=classes.linkclasses
          href=item.getURL()
        )= item.getName()
        if item.getPagesAll().length && depth > 0
          +libtoc({pages: item.getPagesAll(), classes: (classes.sub || {}), depth: depth-1})

mixin microdataCheckbox(id)
  div.docs-c-Togglable
    input.docs-c-Togglable__Check(id=id+'-check' type="checkbox" value=id+'-md-true')
    label(for=id+'-check') show microdata
    block
