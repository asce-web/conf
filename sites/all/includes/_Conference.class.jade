-
  var Conference = (function () {
    function Conference($confinfo) {
      var self = this
      $confinfo = $confinfo || {}
      self.name      = $confinfo.name
      self.theme     = $confinfo.theme
      self.startDate = $confinfo.startDate
      self.endDate   = $confinfo.endDate
      self.url       = $confinfo.url
      self.location  = {
        addressLocality     : $confinfo.city
      , addressRegion       : $confinfo.state
      , addressRegion_title : (state_data.find(function (item) { return item.index === $confinfo.state }) || false).name
      }
      self.pass_periods = []
      self.passes = []
      self.program_events = []
      self.important_dates = []
    }

    //- SETTER FUNCTIONS
    Conference.prototype.addPassPeriod = function addPassPeriod(pass_period) {
      this.pass_periods.push(pass_period)
      return this
    }
    Conference.prototype.removePassPeriod = function removePassPeriod(pass_period_name) {
      spliceFromArray(this.pass_periods, this.getPassPeriod(pass_period_name))
      return this
    }
    Conference.prototype.addPass = function addPass(pass) {
      this.passes.push(pass)
      return this
    }
    Conference.prototype.removePass = function removePass(pass_name) {
      spliceFromArray(this.passes, this.getPass(pass_name))
      return this
    }
    Conference.prototype.addProgramEvent = function addProgramEvent(program_event) {
      this.program_events.push(program_event)
      return this
    }
    Conference.prototype.removeProgramEvent = function removeProgramEvent(program_event_name) {
      spliceFromArray(this.program_events, this.getProgramEvent(program_event_name))
      return this
    }
    Conference.prototype.addImportantDate = function addImportantDate(important_date) {
      this.important_dates.push(program_event)
      return this
    }
    Conference.prototype.removeImportantDate = function removeImportantDate(important_date_name) {
      spliceFromArray(this.important_dates, this.getImportantDate(important_date_name))
      return this
    }

    //- GETTER FUNCTIONS
    Conference.prototype.getPassPeriod = function getPassPeriod(pass_period_name) {
      return this.pass_periods.find(function (item) { return item.name === pass_period_name })
    }
    Conference.prototype.getPass = function getPass(pass_name) {
      return this.passes.find(function (item) { return item.name === pass_name })
    }
    Conference.prototype.getProgramEvent = function getProgramEvent(program_event_name) {
      return this.program_events.find(function (item) { return item.name === program_event_name })
    }
    Conference.prototype.getImportantDate = function getImportantDate(important_date_name) {
      return this.important_dates.find(function (item) { return item.name === important_date_name })
    }
    Conference.prototype.getPassPeriodsAll = function getPassPeriodsAll() {
      return this.pass_periods.slice()
    }
    Conference.prototype.getPassesAll = function getPassesAll() {
      return this.passes.slice()
    }
    Conference.prototype.getProgramEventsAll = function getProgramEventsAll() {
      return this.program_events.slice()
    }
    Conference.prototype.getImportantDatesAll = function getImportantDatesAll() {
      return this.important_dates.slice()
    }

    //- MORE PROTO FUNCTIONS
    Conference.prototype.setPrice = function setPrice(pass_period, pass, membership, price) {
      //- pass_period = pass_period.name || pass_period
      //- pass        = pass.name        || pass
      //- membership  = membership.name  || membership
      //- this.registration = this.registration || {}
      //- this.registration[pass_period][pass][membership] = price
      return this
    }

    return Conference
  })()
