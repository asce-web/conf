-
  var Site = (function () {
    //- CONSTRUCTOR
    function Site($siteinfo) {
      var self = this
      self.title    = $siteinfo.title
      self.tagline  = $siteinfo.tagline
      self.keywords = $siteinfo.keywords
      self.pages = {
        top: [
          new Page({
            name: self.title
          , url:  'index.html'
          }).setIcon('')
        , new Page({
            name: 'About'
          , url:  'about.html'
          }).setIcon('info_outline')
        , new Page({
            name: 'Sponsor'
          , url:  'sponsor.html'
          }).setIcon('people')
        , new Page({
            name: 'Exhibit'
          , url:  'exhibit.html'
          }).setIcon('work')
        , new Page({
            name: 'Contact'
          , url:  'contact.html'
          }).setIcon('email')
        ]
      , main: [
          new Page({
            name: 'Home'
          , url:  'home.html'
          }).setIcon('home')
        , new Page({
            name: 'Registration'
          , url:  'registration.html'
          }).setIcon('shopping_cart')
        , new Page({
            name: 'Program'
          , url:  'program.html'
          }).setIcon('event')
        , new Page({
            name: 'Hotel & Travel'
          , url:  'location.html'
          }).setIcon('flight')
        , new Page({
            name: 'Speakers'
          , url:  'speakers.html'
          }).setIcon('account_box')
        ]
      }
      self.conference;
      self.supporter_levels;
      self.supporters;
    }

    //- SETTER FUNCTIONS
    Site.prototype.addSubpage = function addSubpage(parent_url, subpage0) {
      var parent_page = this.getPage('main', parent_url)
      parent_page.sub = parent_page.sub || []
      parent_page.sub.push(subpage0)
      return this
    }
    Site.prototype.removeSubpage = function removeSubpage(url0) {
      var parent_page = this.pages.main.find(function (main_page) {
        return (main_page.sub && main_page.sub.find(function (sub_page) { return sub_page.url === url0 }))
      })
      spliceFromArray(parent_page.sub, this.getSubpage(url0))
      return this
    }
    Site.prototype.setConference = function setConference(year, conference0) {
      this.conference = this.conference || {}
      this.conference[year] = conference0
      return this
    }
    Site.prototype.setCurrentConference = function setCurrentConference(year) {
      return this.setConference('current', this.getConference(year))
    }
    Site.prototype.addSupporterLevel = function addSupporterLevel(supporter_level) {
      this.supporter_levels = this.supporter_levels || []
      this.supporter_levels.push(supporter_level)
      return this
    }
    Site.prototype.removeSupporterLevel = function removeSupporterLevel(supporter_level_name) {
      spliceFromArray(this.supporter_levels, this.getSupporterLevel(supporter_level_name))
      return this
    }
    Site.prototype.addSupporter = function addSupporter(supporter) {
      this.supporters = this.supporters || []
      this.supporters.push(supporter)
      return this
    }
    Site.prototype.removeSupporter = function removeSupporter(supporter_name) {
      spliceFromArray(this.supporters, this.getSupporter(supporter_name))
      return this
    }

    //- GETTER FUNCTIONS
    Site.prototype.getPage = function getPage(type, url0) {
      this.pages[type] = this.pages[type] || []
      return this.pages[type].find(function (item) { return item.url === url0 })
    }
    Site.prototype.getSubpage = function getSubpage(url0) {
      var parent_page = this.pages.main.find(function (main_page) {
        return (main_page.sub && main_page.sub.find(function (sub_page) { return sub_page.url === url0 }))
      })
      return parent_page.sub.find(function (sub_page) { return sub_page.url === url0 })
      //- var returned
      //- for (var page of this.pages.main) {
      //-   returned = page.sub.find(function (item) { return item.url === url0 })
      //-   if (returned) {
      //-     break
      //-   }
      //- }
      //- return returned
    }
    Site.prototype.getConference = function getConference(year) {
      return this.conference[year]
    }
    Site.prototype.getCurrentConference = function getCurrentConference() {
      return this.conference.current
    }
    Site.prototype.getSupporterLevel = function getSupporterLevel(supporter_level_name) {
      return this.supporter_levels.find(function (item) { return item.name === supporter_level_name })
    }
    Site.prototype.getSupporter = function getSupporter(supporter_name) {
      return this.supporters.find(function (item) { return item.name === supporter_name })
    }

    //- STATIC FIELDS
    Site.MENU_CLASS = {
      standard: {
        listclasses: 'o-ListBare o-GridFlex c-MenuStandard'
      , itemclasses: 'o-GridFlex__Item c-MenuStandard__Item'
      , linkclasses: 'o-Block c-MenuStandard__Link'
      , sub: {
          listclasses: 'o-ListBare c-MenuSub'
        , itemclasses: 'c-MenuSub__Item'
        , linkclasses: 'o-Block c-MenuSub__Link'
        }
      }
    , sitemap: {
        listclasses: 'o-ListBare o-GridFlex c-Sitemap'
      , itemclasses: 'o-GridFlex__Item c-Sitemap__Item'
      , sub: {
          listclasses: 'o-ListBare c-Sitemap__SubList'
        , itemclasses: 'c-Sitemap__SubItem'
        }
      }
    }

    return Site
  })()
